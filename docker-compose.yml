version: '3.8'

services:
  # PostgreSQL Database for Zitadel
  zitadel-db:
    image: postgres:15-alpine
    container_name: zitadel-db
    environment:
      POSTGRES_USER: zitadel
      POSTGRES_PASSWORD: zitadel
      POSTGRES_DB: zitadel
    volumes:
      - zitadel_db_data:/var/lib/postgresql/data
    networks:
      - tacacs-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zitadel"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Zitadel Identity Provider
  zitadel:
    image: ghcr.io/zitadel/zitadel:latest
    container_name: zitadel
    command: 'start-from-init --config /zitadel.yaml --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode disabled'
    environment:
      ZITADEL_DATABASE_POSTGRES_HOST: zitadel-db
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: zitadel
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
      ZITADEL_EXTERNALSECURE: false
      ZITADEL_EXTERNALPORT: 8080
      ZITADEL_EXTERNALDOMAIN: localhost
    ports:
      - "8080:8080"
    volumes:
      - ./zitadel-config/zitadel.yaml:/zitadel.yaml:ro
    depends_on:
      zitadel-db:
        condition: service_healthy
    networks:
      - tacacs-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/debug/healthz"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 90s

  # TACACS+ Server with Zitadel Integration
  tacacs-server:
    build:
      context: ./tacacs-server
      dockerfile: Dockerfile
    container_name: tacacs-server
    environment:
      TACACS_LISTEN_ADDRESS: "0.0.0.0:49"
      TACACS_SECRET: "${TACACS_SECRET:-testing123}"
      # Zitadel Configuration
      ZITADEL_URL: "http://zitadel:8080"
      ZITADEL_CLIENT_ID: "${ZITADEL_CLIENT_ID}"
      ZITADEL_CLIENT_SECRET: "${ZITADEL_CLIENT_SECRET}"
      ZITADEL_PROJECT_ID: "${ZITADEL_PROJECT_ID}"
      LOG_LEVEL: "info"
      # Database connection for session tracking
      DB_HOST: "zitadel-db"
      DB_PORT: "5432"
      DB_NAME: "zitadel"
      DB_USER: "zitadel" 
      DB_PASSWORD: "zitadel"
      SESSION_TIMEOUT: "1800"
      TOKEN_CACHE_TIMEOUT: "300"
    ports:
      - "49:49"
      - "8090:8090"
    depends_on:
      - zitadel
    networks:
      - tacacs-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8090/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test Client for TACACS+
  test-client:
    build:
      context: ./test-client
      dockerfile: Dockerfile
    container_name: tacacs-test-client
    environment:
      TACACS_SERVER: "tacacs-server:49"
      TACACS_SECRET: "${TACACS_SECRET:-testing123}"
      TEST_USERNAME: "testuser"
      TEST_PASSWORD: "testpass"
    depends_on:
      tacacs-server:
        condition: service_healthy
    networks:
      - tacacs-network
    profiles:
      - testing

volumes:
  zitadel_db_data:

networks:
  tacacs-network:
    driver: bridge